{"version":3,"sources":["manifests/manifestHelper.js","manifests/dota-heroes.js","components/HeroPortrait.js","components/HeroBoardSection.js","components/SearchModal.js","components/HeroBoard.js","components/Home.js","components/SoundButton.js","components/SoundBoard.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["all","parser","parse","header","data","map","hero","responses_url","split","manifestHelper","readHeroesByStat","stat","console","log","filter","primary_attribute","readAll","HeroPortrait","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selfRef","React","createRef","formattedName","name","replace","searchText","RegExp","concat","test","current","focus","react_default","a","createElement","react_router_dom","className","classState","innerRef","to","pathname","state","src","portrait_path","alt","Component","HeroBoardSection","label","toUpperCase","heroes","src_components_HeroPortrait","key","SearchModal","handleKeyDown","event","searchInputDebounced","timeout1","timeout2","validCharset","char","keyCode","setState","text","slice","length","hidden","fading","handleUpdate","clearTimeout","setTimeout","modalRef","window","addEventListener","removeEventListener","getClassState","ref","HeroBoard","heroNames","helper","agility","strength","intelligence","selected","src_components_HeroBoardSection","src_components_SearchModal","bind","Home","apiResponse","src_components_HeroBoard","SoundButton","buttonRef","playing","Audio","getAttribute","play","data-src","mp3src","type","onClick","playAudio","Soundboard","img","Image","fullPortraitPath","location","_this2","fetch","process","BASE_URL","method","then","response","json","usableMp3s","mp3s","mp3","trim","resource","index","src_components_SoundButton","react_loading_default","color","height","width","Contact","action","htmlFor","id","cols","rows","App","react_router","exact","path","component","SoundBoard","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0cAIIA,SAAMC,EAAOC,MCJL,ivUDIqB,CAACC,QAAQ,IAC1CH,EAAII,KAAOJ,EAAII,KAAKC,IAAI,SAACC,GAEvB,OADAA,EAAKC,cAAgBD,EAAKC,cAAcC,MAAM,KAAK,GAC5CF,IAcM,IAAAG,EAAA,CAAEC,iBAXjB,SAA0BC,GAExB,OADAC,QAAQC,IAAIb,GACLA,EAAII,KAAKU,OAAO,SAACR,GACtB,OAAOA,EAAKS,oBAAsBJ,KAQHK,QAJnC,WACE,OAAOhB,EAAII,uBE8BEa,qBA3Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,QAAUC,IAAMC,YACrBT,EAAKU,cAAgBV,EAAKD,MAAMZ,KAAKwB,KAAKC,QAAQ,IAAK,KAJtCZ,4EAQjB,MAA8B,KAA1BG,KAAKJ,MAAMc,WACN,gBAEE,IAAIC,OAAJ,IAAAC,OAAeZ,KAAKJ,MAAMc,WAA1B,QACFG,KAAKb,KAAKO,gBACXP,KAAKI,QAAQU,UACfxB,QAAQC,IAAIS,KAAKI,SACjBJ,KAAKI,QAAQU,QAAQC,SAEhB,yCAEA,2EAMX,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAWpB,KAAKqB,aAAcC,SAAUtB,KAAKI,QAASmB,GAAI,CAC9DC,SAAQ,IAAAZ,OAAMZ,KAAKJ,MAAMZ,KAAKwB,MAC9BiB,MAAO,CACLzC,KAAMgB,KAAKJ,MAAMZ,QAGnBgC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAuBM,IAAG,gEAAAd,OAAkEZ,KAAKJ,MAAMZ,KAAK2C,eAAiBC,IAAI,qDAjC7HvB,IAAMwB,YCkBlBC,mLAhBJ,IAAAjC,EAAAG,KACP,OACEgB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,uBAAuBpB,KAAKJ,MAAMmC,MAAMC,gBAE1DhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACZpB,KAAKJ,MAAMqC,OAAOlD,IAAI,SAACC,GACtB,OAAOgC,EAAAC,EAAAC,cAACgB,EAAD,CAAcxB,WAAYb,EAAKD,MAAMc,WAAY1B,KAAMA,EAAMmD,IAAKnD,EAAKwB,kBAT3DH,IAAMwB,WCyHtBO,qBA1Hb,SAAAA,EAAYxC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACjBvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,KAAMJ,KA6BRyC,cAAgB,SAACC,GACfzC,EAAK0C,qBAAqBD,IA/BTzC,EAkCnB0C,qBAAwB,WACtB,IAAIC,EAAW,KACXC,EAAW,KACXC,EAAe,IAAI/B,OAAO,eAM9B,OAAO,SAAC2B,GAEN,IAAIK,EAAOL,EAAMH,IAEjB,OAAOG,EAAMM,SACX,KAAK,EAEH/C,EAAKgD,SAAS,SAACpB,GACb,MAAO,CACLqB,KAAMrB,EAAMqB,KAAKC,MAAM,EAAGtB,EAAMqB,KAAKE,OAAS,GAC9CC,QAAQ,EACRC,QAAQ,IAET,WACDrD,EAAKD,MAAMuD,aAAatD,EAAK4B,MAAMqB,QAGrC,MACF,KAAK,GAcH,OAZAjD,EAAKgD,SAAS,SAACpB,GACb,MAAO,CACLqB,KAAM,GACNG,QAAQ,EACRC,QAAQ,IAET,WACDrD,EAAKD,MAAMuD,aAAatD,EAAK4B,MAAMqB,QAGrCM,aAAaZ,QACbY,aAAaX,GAEf,QAEE5C,EAAKgD,SAAS,SAACpB,GACb,MAAO,CACLqB,KAAMrB,EAAMqB,MAzCHH,EAyCuBA,EAxCjCD,EAAa7B,KAAK8B,GAwCuBA,EAAO,IAC/CM,QAAQ,EACRC,QAAQ,GA3CA,IAACP,GA6CV,WACD9C,EAAKD,MAAMuD,aAAatD,EAAK4B,MAAMqB,QAIzCM,aAAaZ,GACbY,aAAaX,GAIbD,EAAWa,WAAW,WACpBxD,EAAKgD,SAAS,SAACpB,GACb,MAAO,CACLyB,QAAQ,MAGX,KAEHT,EAAWY,WAAW,WACpBxD,EAAKgD,SAAS,SAACpB,GACb,MAAO,CACLqB,KAAM,GACNG,QAAQ,MAGX,MA3EiB,GAhCtBpD,EAAKyD,SAAWjD,IAAMC,YAEtBT,EAAK4B,MAAQ,CACXqB,KAAM,GACNG,QAAQ,EACRC,QAAQ,GAPOrD,mFAYjB0D,OAAOC,iBAAiB,UAAWxD,KAAKqC,8DAIxCkB,OAAOE,oBAAoB,UAAWzD,KAAKqC,uDAK3C,OAA0B,IAAtBrC,KAAKyB,MAAMwB,OACN,uBACwB,IAAtBjD,KAAKyB,MAAMyB,OACb,sBAEA,gDAwFT,OACElC,EAAAC,EAAAC,cAAA,OAAKE,UAAWpB,KAAK0D,gBAAiBC,IAAK3D,KAAKsD,UAC7CtD,KAAKyB,MAAMqB,KAAKd,sBArHC3B,IAAMwB,YC0CjB+B,cAjCb,SAAAA,EAAYhE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACjB/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,KAAMJ,KAED6B,MAAQ,CACXoC,UAAWC,EAAOpE,UAClBqE,QAASD,EAAO1E,iBAAiB,WACjC4E,SAAUF,EAAO1E,iBAAiB,YAClC6E,aAAcH,EAAO1E,iBAAiB,gBACtC8E,SAAU,KACVxD,WAAY,IATGb,4EAaNiD,GACX9C,KAAK6C,SAAS,SAACpB,GACb,MAAO,CACLf,WAAYoC,sCAMhB,OACE9B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACiD,EAAD,CAAkBzD,WAAYV,KAAKyB,MAAMf,WAAYqB,MAAM,WAAWE,OAAQjC,KAAKyB,MAAMuC,WACzFhD,EAAAC,EAAAC,cAACiD,EAAD,CAAkBzD,WAAYV,KAAKyB,MAAMf,WAAYqB,MAAM,UAAUE,OAAQjC,KAAKyB,MAAMsC,UACxF/C,EAAAC,EAAAC,cAACiD,EAAD,CAAkBzD,WAAYV,KAAKyB,MAAMf,WAAYqB,MAAM,eAAeE,OAAQjC,KAAKyB,MAAMwC,eAC7FjD,EAAAC,EAAAC,cAACkD,EAAD,CAAajB,aAAcnD,KAAKmD,aAAakB,KAAKrE,gBA/BlCK,IAAMwB,WCiBfyC,cAnBb,SAAAA,EAAY1E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACjBzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMJ,KACD6B,MAAQ,CAAE8C,YAAa,IAFX1E,wEAMjB,OACEmB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBAKlBJ,EAAAC,EAAAC,cAACsD,EAAD,cAdWnE,IAAMwB,4BCyBV4C,qBAzBb,SAAAA,EAAY7E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,IACjB5E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2E,GAAAtE,KAAAH,KAAMJ,KAED8E,UAAYrE,IAAMC,YACvBT,EAAK4B,MAAQ,CACXkD,SAAQ,GALO9E,2EAUjBP,QAAQC,IAAIS,KAAK0E,UAAU5D,SACf,IAAI8D,MAAM5E,KAAK0E,UAAU5D,QAAQ+D,aAAa,aACpDC,wCAIN,OACE9D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAe2D,WAAU/E,KAAKJ,MAAMoF,OAAQrB,IAAK3D,KAAK0E,UACtEO,KAAK,SAASC,QAASlF,KAAKmF,UAAUd,KAAKrE,OAC1CA,KAAKJ,MAAMkD,aApBMzC,IAAMwB,YCmDjBuD,qBAhDb,SAAAA,EAAYxF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACjBvF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsF,GAAAjF,KAAAH,KAAMJ,KAEDyF,IAAM,IAAIC,MACfzF,EAAK0F,iBAAmB1F,EAAKD,MAAM4F,SAAS/D,MAAMzC,KAAK2C,cAAclB,QAAQ,MAAO,SACpFnB,QAAQC,IAAIM,EAAKD,MAAM4F,SAAS/D,OAChC5B,EAAK4B,MAAQ,GANI5B,mFASC,IAAA4F,EAAAzF,KAEVhB,EAASgB,KAAKJ,MAAM4F,SAAS/D,MAA7BzC,KACRgB,KAAKqF,IAAI3D,IAAT,gEAAAd,OAA+EZ,KAAKuF,kBACpFvF,KAAK6C,SAAS,iBAAO,CAAE7D,UAEvB0G,MAAK,GAAA9E,OAAI+E,8CAAYC,UAAY,wBAA5B,uBAAAhF,OAAyE5B,EAAKC,eAAiB,CAClG4G,OAAQ,QACNC,KAAK,SAACC,GACP,OAAOA,EAASC,SACfF,KAAK,SAAChH,GACRQ,QAAQC,IAAIT,GACZ,IAAImH,EAAanH,EAAKoH,KAAK1G,OAAO,SAAC2G,GACjC,MAA2B,KAApBA,EAAIrD,KAAKsD,SAElBX,EAAK5C,SAAS,WACZ,MAAO,CAAEqD,KAAMD,wCAMnB,OACEjG,KAAKyB,MAAMyE,KACTlF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAuBM,IAAG,gEAAAd,OAAkEZ,KAAKuF,kBAAoB3D,IAAI,MAE1IZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACZpB,KAAKyB,MAAMyE,KAAKnH,IAAI,SAACsH,EAAUC,GAC9B,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,CAAavB,OAAQqB,EAASrB,OAAQlC,KAAMuD,EAASvD,KAAMX,IAAKkE,EAASrB,OAAOsB,QAI3FtF,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAcG,UAAU,UAAU6D,KAAK,OAAOwB,MAAM,OAAOC,OAAO,KAAKC,MAAM,cA7C9DtG,IAAMwB,YC6BhB+E,qBA7Bb,SAAAA,EAAYhH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4G,IACjB/G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8G,GAAAzG,KAAAH,KAAMJ,KAED6B,MAAQ,CACXjB,KAAM,MAJSX,wEASjB,OACEmB,EAAAC,EAAAC,cAAA,QAAME,UAAU,eAAeyE,OAAO,OAAOgB,OAAM,GAAAjG,OAAK+E,8CAAYC,UAAY,wBAA7B,aACjD5E,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SAAO4F,QAAQ,QAAf,UACA9F,EAAAC,EAAAC,cAAA,SAAO6F,GAAG,OAAO9B,KAAK,OAAOzE,KAAK,SAElCQ,EAAAC,EAAAC,cAAA,SAAO4F,QAAQ,SAAf,WACA9F,EAAAC,EAAAC,cAAA,SAAO6F,GAAG,QAAQ9B,KAAK,OAAOzE,KAAK,UAEnCQ,EAAAC,EAAAC,cAAA,SAAO4F,QAAQ,QAAf,cACA9F,EAAAC,EAAAC,cAAA,YAAU6F,GAAG,OAAOC,KAAK,KAAKC,KAAK,KAAKzG,KAAK,SAE7CQ,EAAAC,EAAAC,cAAA,UAAQ+D,KAAK,UAAb,mBAvBY5E,IAAMwB,YCsBbqF,mLARX,OACElG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAXQ,kBACVF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhD,IACjCtD,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWV,IAClC5F,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWC,OAMtC,cAbU1F,aCKE2F,QACW,cAA7BjE,OAAOiC,SAASiC,UAEe,UAA7BlE,OAAOiC,SAASiC,UAEhBlE,OAAOiC,SAASiC,SAASC,MACvB,2DCXNC,IAASC,OACP5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC2G,EAAD,OACSC,SAASC,eAAe,SDuH/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpC,KAAK,SAAAqC,GACjCA,EAAaC","file":"static/js/main.da9db976.chunk.js","sourcesContent":["import parser from 'papaparse';\r\n\r\nimport manifest from './dota-heroes.js';\r\n\r\nlet all = parser.parse(manifest, {header: true});\r\nall.data = all.data.map((hero) => {\r\n  hero.responses_url = hero.responses_url.split(',')[0]\r\n  return hero;\r\n});\r\n\r\nfunction readHeroesByStat(stat) {\r\n  console.log(all);\r\n  return all.data.filter((hero) => {\r\n    return hero.primary_attribute === stat;\r\n  })\r\n}\r\n\r\nfunction readAll() {\r\n  return all.data;\r\n}\r\n\r\nexport default { readHeroesByStat, readAll };","let manifest = `name,primary_attribute,portrait_path,responses_url\r\nabaddon,strength,abaddon_lg.png,\"https://dota2.gamepedia.com/Abaddon/Responses,\"\r\nalchemist,strength,alchemist_lg.png,\"https://dota2.gamepedia.com/Alchemist/Responses,\"\r\nancient_apparition,intelligence,ancient_apparition_lg.png,\"https://dota2.gamepedia.com/Ancient_Apparition/Responses,\"\r\nantimage,agility,antimage_lg.png,\"https://dota2.gamepedia.com/Anti-Mage/Responses,\"\r\narc_warden,agility,arc_warden_lg.png,\"https://dota2.gamepedia.com/Arc_Warden/Responses,\"\r\naxe,strength,axe_lg.png,\"https://dota2.gamepedia.com/Axe/Responses,\"\r\nbane,intelligence,bane_lg.png,\"https://dota2.gamepedia.com/Bane/Responses,\"\r\nbatrider,intelligence,batrider_lg.png,\"https://dota2.gamepedia.com/Batrider/Responses,\"\r\nbeastmaster,strength,beastmaster_lg.png,\"https://dota2.gamepedia.com/Beastmaster/Responses,\"\r\nbloodseeker,agility,bloodseeker_lg.png,\"https://dota2.gamepedia.com/Bloodseeker/Responses,\"\r\nbounty_hunter,agility,bounty_hunter_lg.png,\"https://dota2.gamepedia.com/Bounty_Hunter/Responses,\"\r\nbrewmaster,strength,brewmaster_lg.png,\"https://dota2.gamepedia.com/Brewmaster/Responses,\"\r\nbristleback,strength,bristleback_lg.png,\"https://dota2.gamepedia.com/Bristleback/Responses,\"\r\nbroodmother,agility,broodmother_lg.png,\"https://dota2.gamepedia.com/Broodmother/Responses,\"\r\ncentaur,strength,centaur_lg.png,\"https://dota2.gamepedia.com/Centaur_Warrunner/Responses,\"\r\nchaos_knight,strength,chaos_knight_lg.png,\"https://dota2.gamepedia.com/Chaos_Knight/Responses,\"\r\nchen,intelligence,chen_lg.png,\"https://dota2.gamepedia.com/Chen/Responses,\"\r\nclinkz,agility,clinkz_lg.png,\"https://dota2.gamepedia.com/Clinkz/Responses,\"\r\nclockwerk,strength,rattletrap_lg.png,\"https://dota2.gamepedia.com/Clockwerk/Responses,\"\r\ncrystal_maiden,intelligence,crystal_maiden_lg.png,\"https://dota2.gamepedia.com/Crystal_Maiden/Responses,\"\r\ndark_seer,intelligence,dark_seer_lg.png,\"https://dota2.gamepedia.com/Dark_Seer/Responses,\"\r\ndark_willow,intelligence,dark_willow_lg.png,\"https://dota2.gamepedia.com/Dark_Willow/Responses,\"\r\ndazzle,intelligence,dazzle_lg.png,\"https://dota2.gamepedia.com/Dazzle/Responses,\"\r\ndeath_prophet,intelligence,death_prophet_lg.png,\"https://dota2.gamepedia.com/Death_Prophet/Responses,\"\r\ndisruptor,intelligence,disruptor_lg.png,\"https://dota2.gamepedia.com/Disruptor/Responses,\"\r\ndoom_bringer,strength,doom_bringer_lg.png,\"https://dota2.gamepedia.com/Doom/Responses,\"\r\ndragon_knight,strength,dragon_knight_lg.png,\"https://dota2.gamepedia.com/Dragon_Knight/Responses,\"\r\ndrow_ranger,agility,drow_ranger_lg.png,\"https://dota2.gamepedia.com/Drow_Ranger/Responses,\"\r\nearth_spirit,strength,earth_spirit_lg.png,\"https://dota2.gamepedia.com/Earth_Spirit/Responses,\"\r\nearthshaker,strength,earthshaker_lg.png,\"https://dota2.gamepedia.com/Earthshaker/Responses,\"\r\nelder_titan,strength,elder_titan_lg.png,\"https://dota2.gamepedia.com/Elder_Titan/Responses,\"\r\nember_spirit,agility,ember_spirit_lg.png,\"https://dota2.gamepedia.com/Ember_Spirit/Responses,\"\r\nenchantress,intelligence,enchantress_lg.png,\"https://dota2.gamepedia.com/Enchantress/Responses,\"\r\nenigma,intelligence,enigma_lg.png,\"https://dota2.gamepedia.com/Enigma/Responses,\"\r\nfaceless_void,agility,faceless_void_lg.png,\"https://dota2.gamepedia.com/Faceless_Void/Responses,\"\r\ngrimstroke,intelligence,grimstroke_lg.png,\"https://dota2.gamepedia.com/Grimstroke/Responses,\"\r\ngyrocopter,agility,gyrocopter_lg.png,\"https://dota2.gamepedia.com/Gyrocopter/Responses,\"\r\nhuskar,strength,huskar_lg.png,\"https://dota2.gamepedia.com/Huskar/Responses,\"\r\ninvoker,intelligence,invoker_lg.png,\"https://dota2.gamepedia.com/Invoker/Responses,\"\r\nio,strength,wisp_lg.png,\"https://dota2.gamepedia.com/Io/Responses,\"\r\njakiro,intelligence,jakiro_lg.png,\"https://dota2.gamepedia.com/Jakiro/Responses,\"\r\njuggernaut,agility,juggernaut_lg.png,\"https://dota2.gamepedia.com/Juggernaut/Responses,\"\r\nkeeper_of_the_light,intelligence,keeper_of_the_light_lg.png,\"https://dota2.gamepedia.com/Keeper_of_the_Light/Responses,\"\r\nkunkka,strength,kunkka_lg.png,\"https://dota2.gamepedia.com/Kunkka/Responses,\"\r\nlegion_commander,strength,legion_commander_lg.png,\"https://dota2.gamepedia.com/Legion_Commander/Responses,\"\r\nleshrac,intelligence,leshrac_lg.png,\"https://dota2.gamepedia.com/Leshrac/Responses,\"\r\nlich,intelligence,lich_lg.png,\"https://dota2.gamepedia.com/Lich/Responses,\"\r\nlifestealer,strength,life_stealer_lg.png,\"https://dota2.gamepedia.com/Lifestealer/Responses,\"\r\nlina,intelligence,lina_lg.png,\"https://dota2.gamepedia.com/Lina/Responses,\"\r\nlion,intelligence,lion_lg.png,\"https://dota2.gamepedia.com/Lion/Responses,\"\r\nlone_druid,agility,lone_druid_lg.png,\"https://dota2.gamepedia.com/Lone_Druid/Responses,\"\r\nluna,agility,luna_lg.png,\"https://dota2.gamepedia.com/Luna/Responses,\"\r\nlycan,strength,lycan_lg.png,\"https://dota2.gamepedia.com/Lycan/Responses,\"\r\nmagnus,strength,magnataur_lg.png,\"https://dota2.gamepedia.com/Magnus/Responses,\"\r\nmars,strength,mars_lg.png,\"https://dota2.gamepedia.com/Mars/Responses,\"\r\nmedusa,agility,medusa_lg.png,\"https://dota2.gamepedia.com/Medusa/Responses,\"\r\nmeepo,agility,meepo_lg.png,\"https://dota2.gamepedia.com/Meepo/Responses,\"\r\nmirana,agility,mirana_lg.png,\"https://dota2.gamepedia.com/Mirana/Responses,\"\r\nmonkey_king,agility,monkey_king_lg.png,\"https://dota2.gamepedia.com/Monkey_King/Responses,\"\r\nmorphling,agility,morphling_lg.png,\"https://dota2.gamepedia.com/Morphling/Responses,\"\r\nnaga_siren,agility,naga_siren_lg.png,\"https://dota2.gamepedia.com/Naga_Siren/Responses,\"\r\nnature's_prophet,intelligence,furion_lg.png,\"https://dota2.gamepedia.com/Nature%27s_Prophet/Responses,\"\r\nnecrolyte,intelligence,necrolyte_lg.png,\"https://dota2.gamepedia.com/Necrophos/Responses,\"\r\nnight_stalker,strength,night_stalker_lg.png,\"https://dota2.gamepedia.com/Night_Stalker/Responses,\"\r\nnyx_assassin,agility,nyx_assassin_lg.png,\"https://dota2.gamepedia.com/Nyx_Assassin/Responses,\"\r\nogre_magi,intelligence,ogre_magi_lg.png,\"https://dota2.gamepedia.com/Ogre_Magi/Responses,\"\r\nomniknight,strength,omniknight_lg.png,\"https://dota2.gamepedia.com/Omniknight/Responses,\"\r\noracle,intelligence,oracle_lg.png,\"https://dota2.gamepedia.com/Oracle/Responses,\"\r\noutworld_devourer,intelligence,obsidian_destroyer_lg.png,\"https://dota2.gamepedia.com/Outworld_Devourer/Responses,\"\r\npangolier,agility,pangolier_lg.png,\"https://dota2.gamepedia.com/Pangolier/Responses,\"\r\nphantom_assassin,agility,phantom_assassin_lg.png,\"https://dota2.gamepedia.com/Phantom_Assassin/Responses,\"\r\nphantom_lancer,agility,phantom_lancer_lg.png,\"https://dota2.gamepedia.com/Phantom_Lancer/Responses,\"\r\nphoenix,strength,phoenix_lg.png,\"https://dota2.gamepedia.com/Phoenix/Responses,\"\r\npuck,intelligence,puck_lg.png,\"https://dota2.gamepedia.com/Puck/Responses,\"\r\npudge,strength,pudge_lg.png,\"https://dota2.gamepedia.com/Pudge/Responses,\"\r\npugna,intelligence,pugna_lg.png,\"https://dota2.gamepedia.com/Pugna/Responses,\"\r\nqueen_of_pain,intelligence,queenofpain_lg.png,\"https://dota2.gamepedia.com/Queen_of_Pain/Responses,\"\r\nrazor,agility,razor_lg.png,\"https://dota2.gamepedia.com/Razor/Responses,\"\r\nriki,agility,riki_lg.png,\"https://dota2.gamepedia.com/Riki/Responses,\"\r\nrubick,intelligence,rubick_lg.png,\"https://dota2.gamepedia.com/Rubick/Responses,\"\r\nsand_king,strength,sand_king_lg.png,\"https://dota2.gamepedia.com/Sand_King/Responses,\"\r\nshadow_demon,intelligence,shadow_demon_lg.png,\"https://dota2.gamepedia.com/Shadow_Demon/Responses,\"\r\nshadowfiend,agility,nevermore_lg.png,\"https://dota2.gamepedia.com/Shadow_Shaman/Responses,\"\r\nshadow_shaman,intelligence,shadow_shaman_lg.png,\"https://dota2.gamepedia.com/Shadow_Fiend/Responses,\"\r\nsilencer,intelligence,silencer_lg.png,\"https://dota2.gamepedia.com/Silencer/Responses,\"\r\nskywrath_mage,intelligence,skywrath_mage_lg.png,\"https://dota2.gamepedia.com/Skywrath_Mage/Responses,\"\r\nslardar,strength,slardar_lg.png,\"https://dota2.gamepedia.com/Slardar/Responses,\"\r\nslark,agility,slark_lg.png,\"https://dota2.gamepedia.com/Slark/Responses,\"\r\nsniper,agility,sniper_lg.png,\"https://dota2.gamepedia.com/Sniper/Responses,\"\r\nspectre,agility,spectre_lg.png,\"https://dota2.gamepedia.com/Spectre/Responses,\"\r\nspirit_breaker,strength,spirit_breaker_lg.png,\"https://dota2.gamepedia.com/Spirit_Breaker/Responses,\"\r\nstorm_spirit,intelligence,storm_spirit_lg.png,\"https://dota2.gamepedia.com/Storm_Spirit/Responses,\"\r\nsven,strength,sven_lg.png,\"https://dota2.gamepedia.com/Sven/Responses,\"\r\ntechies,intelligence,techies_lg.png,\"https://dota2.gamepedia.com/Techies/Responses,\"\r\ntemplar_assassin,agility,templar_assassin_lg.png,\"https://dota2.gamepedia.com/Templar_Assassin/Responses,\"\r\nterrorblade,agility,terrorblade_lg.png,\"https://dota2.gamepedia.com/Terrorblade/Responses,\"\r\ntidehunter,strength,tidehunter_lg.png,\"https://dota2.gamepedia.com/Tidehunter/Responses,\"\r\ntimbersaw,strength,shredder_lg.png,\"https://dota2.gamepedia.com/Timbersaw/Responses,\"\r\ntinker,intelligence,tinker_lg.png,\"https://dota2.gamepedia.com/Tinker/Responses,\"\r\ntiny,strength,tiny_lg.png,\"https://dota2.gamepedia.com/Tiny/Responses,\"\r\ntreant,strength,treant_lg.png,\"https://dota2.gamepedia.com/Treant_Protector/Responses,\"\r\ntroll_warlord,agility,troll_warlord_lg.png,\"https://dota2.gamepedia.com/Troll_Warlord/Responses,\"\r\ntusk,strength,tusk_lg.png,\"https://dota2.gamepedia.com/Tusk/Responses,\"\r\nunderlord,strength,underlord_lg.png,\"https://dota2.gamepedia.com/Underlord/Responses,\"\r\nundying,strength,undying_lg.png,\"https://dota2.gamepedia.com/Undying/Responses,\"\r\nursa,agility,ursa_lg.png,\"https://dota2.gamepedia.com/Ursa/Responses,\"\r\nvengeful_spirit,agility,vengefulspirit_lg.png,\"https://dota2.gamepedia.com/Vengeful_Spirit/Responses,\"\r\nvenomancer,agility,venomancer_lg.png,\"https://dota2.gamepedia.com/Venomancer/Responses,\"\r\nviper,agility,viper_lg.png,\"https://dota2.gamepedia.com/Viper/Responses,\"\r\nvisage,intelligence,visage_lg.png,\"https://dota2.gamepedia.com/Visage/Responses,\"\r\nwarlock,intelligence,warlock_lg.png,\"https://dota2.gamepedia.com/Warlock/Responses,\"\r\nweaver,agility,weaver_lg.png,\"https://dota2.gamepedia.com/Weaver/Responses,\"\r\nwindranger,intelligence,windrunner_lg.png,\"https://dota2.gamepedia.com/Windranger/Responses,\"\r\nwinter_wyvern,intelligence,winter_wyvern_lg.png,\"https://dota2.gamepedia.com/Winter_Wyvern/Responses,\"\r\nwitch_doctor,intelligence,witch_doctor_lg.png,\"https://dota2.gamepedia.com/Witch_Doctor/Responses,\"\r\nwraith_king,strength,skeleton_king_lg.png,\"https://dota2.gamepedia.com/Wraith_King/Responses,\"\r\nzeus,intelligence,zuus_lg.png,\"https://dota2.gamepedia.com/Zeus/Responses\"`\r\n\r\nexport default manifest;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HeroPortrait.css';\r\n\r\nclass HeroPortrait extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.selfRef = React.createRef();\r\n    this.formattedName = this.props.hero.name.replace('_', ' ');\r\n  }\r\n\r\n  classState() {\r\n    if (this.props.searchText === \"\") {\r\n      return \"hero-portrait\";\r\n    } else {\r\n      let re = new RegExp(`^${this.props.searchText}.*$`); // match if name starts with search string\r\n      if (re.test(this.formattedName)) {\r\n        if (this.selfRef.current) {\r\n          console.log(this.selfRef);\r\n          this.selfRef.current.focus();\r\n        }\r\n        return \"hero-portrait hero-portrait--selected\";\r\n      } else {\r\n        return \"hero-portrait hero-portrait--unselected\";\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Link className={this.classState()} innerRef={this.selfRef} to={{\r\n        pathname: `/${this.props.hero.name}`,\r\n        state: {\r\n          hero: this.props.hero\r\n        }\r\n      }}>\r\n        <img className=\"hero-portrait__image\" src={`https://storage.cloud.google.com/dota-hero-portraits/205x115/${this.props.hero.portrait_path}`} alt=\"\"></img>\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  handleSelect() {\r\n    /* Either from click or from search -> enter, should redirect the user to the soundboard page for this hero.\r\n    Receives path to responses page from this.props.hero.responses_path */\r\n  }\r\n}\r\n\r\nexport default HeroPortrait;","import React from 'react';\r\nimport './HeroBoardSection.css';\r\n\r\nimport HeroPortrait from './HeroPortrait.js';\r\n\r\nclass HeroBoardSection extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"hero-board-section\">\r\n        <div className=\"section-label\">\r\n          <span className=\"section-label__text\">{this.props.label.toUpperCase()}</span>\r\n        </div>\r\n        <div className=\"section-content\">\r\n          {this.props.heroes.map((hero) => {\r\n            return <HeroPortrait searchText={this.props.searchText} hero={hero} key={hero.name} />\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeroBoardSection;","import React from 'react';\r\nimport './SearchModal.css';\r\n\r\nclass SearchModal extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.modalRef = React.createRef();\r\n    \r\n    this.state = {\r\n      text: \"\",\r\n      hidden: true,\r\n      fading: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    \r\n  }\r\n\r\n  getClassState() {\r\n    if (this.state.hidden === true) {\r\n      return \"search-modal hidden\";\r\n    } else if (this.state.fading === true) {\r\n      return \"search-modal fading\";\r\n    } else {\r\n      return \"search-modal\";\r\n    }\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    this.searchInputDebounced(event);\r\n  }\r\n\r\n  searchInputDebounced = (() => {\r\n    let timeout1 = null;\r\n    let timeout2 = null;\r\n    let validCharset = new RegExp('^[a-zA-Z ]$');\r\n\r\n    let charIsValid = (char) => {\r\n      return validCharset.test(char);\r\n    }\r\n\r\n    return (event) => {\r\n      /* Event handler */\r\n      let char = event.key;\r\n\r\n      switch(event.keyCode) {\r\n        case 8:\r\n          // Backspace: Delete the last char.\r\n          this.setState((state) => {\r\n            return {\r\n              text: state.text.slice(0, state.text.length - 1),\r\n              hidden: false,\r\n              fading: false,\r\n            }\r\n          }, () => {\r\n            this.props.handleUpdate(this.state.text);\r\n          });\r\n          \r\n          break;\r\n        case 27:\r\n          // Escape: Clear all search text and immediately hide modal.\r\n          this.setState((state) => {\r\n            return {\r\n              text: '',\r\n              hidden: true,\r\n              fading: false,\r\n            }\r\n          }, () => {\r\n            this.props.handleUpdate(this.state.text);\r\n          });\r\n\r\n          clearTimeout(timeout1);\r\n          clearTimeout(timeout2);\r\n          return;\r\n        default:\r\n          // Any other key: If it is A-Z or \" \", add it to the stored search text.\r\n          this.setState((state) => {\r\n            return {\r\n              text: state.text + (charIsValid(char) ? char : ''),\r\n              hidden: false,\r\n              fading: false,\r\n            }\r\n          }, () => {\r\n            this.props.handleUpdate(this.state.text);\r\n          });\r\n      }\r\n\r\n      clearTimeout(timeout1); // first delayed function hides the search modal.\r\n      clearTimeout(timeout2); // second one clears the text, it's timed so once the search text completely fades,\r\n      // the text is cleared.\r\n\r\n      // Reset search text and hide modal after 1.5s.\r\n      timeout1 = setTimeout(() => {\r\n        this.setState((state) => {\r\n          return {\r\n            fading: true\r\n          }\r\n        })\r\n      }, 500)\r\n\r\n      timeout2 = setTimeout(() => {\r\n        this.setState((state) => {\r\n          return {\r\n            text: \"\",\r\n            hidden: true,\r\n          }\r\n        })\r\n      }, 1000)\r\n    } \r\n  })();\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.getClassState()} ref={this.modalRef}>\r\n        {this.state.text.toUpperCase()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchModal;","import React from 'react';\r\nimport './HeroBoard.css';\r\nimport helper from '../manifests/manifestHelper.js';\r\n\r\nimport HeroBoardSection from './HeroBoardSection.js';\r\nimport SearchModal from './SearchModal';\r\n\r\n\r\nclass HeroBoard extends React.Component {\r\n  /* Component which displays all of the 100+ heroes available. Implements search feature:\r\n  typing while on this screen narrows down heroes like on Dota pick screen, and pressing enter when\r\n  there is only one valid choice brings you to the Soundboard screen. */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      heroNames: helper.readAll(),\r\n      agility: helper.readHeroesByStat('agility'),\r\n      strength: helper.readHeroesByStat('strength'),\r\n      intelligence: helper.readHeroesByStat('intelligence'),\r\n      selected: null,\r\n      searchText: \"\",\r\n    }\r\n  }\r\n\r\n  handleUpdate(text) {\r\n    this.setState((state) => {\r\n      return {\r\n        searchText: text\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-board\">\r\n        <HeroBoardSection searchText={this.state.searchText} label=\"strength\" heroes={this.state.strength}/>\r\n        <HeroBoardSection searchText={this.state.searchText} label=\"agility\" heroes={this.state.agility}/>\r\n        <HeroBoardSection searchText={this.state.searchText} label=\"intelligence\" heroes={this.state.intelligence}/>\r\n        <SearchModal handleUpdate={this.handleUpdate.bind(this)}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeroBoard;\r\n","import React from 'react';\nimport './Home.css';\n\nimport HeroBoard from './HeroBoard';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          {/* <img src={logo} className=\"Home-logo\" alt=\"logo\" /> */}\n          {/* DOTA 2 SOUNDBOARD */}\n        </header>\n  \n        <HeroBoard />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\r\n\r\nimport './SoundButton.css';\r\n\r\nclass SoundButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.buttonRef = React.createRef();\r\n    this.state = {\r\n      playing:false,\r\n    }\r\n  }\r\n\r\n  playAudio() {\r\n    console.log(this.buttonRef.current);\r\n    var audio = new Audio(this.buttonRef.current.getAttribute('data-src'));\r\n    audio.play();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <button className=\"sound-button\" data-src={this.props.mp3src} ref={this.buttonRef}\r\n        type=\"button\" onClick={this.playAudio.bind(this)}>\r\n        {this.props.text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SoundButton;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport SoundButton from './SoundButton.js';\r\nimport './SoundBoard.css';\r\n\r\nclass Soundboard extends React.Component {\r\n  /* Displays all voice responses for a particular hero. */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.img = new Image();\r\n    this.fullPortraitPath = this.props.location.state.hero.portrait_path.replace('_lg', '_full');\r\n    console.log(this.props.location.state);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const { heroname } = this.props.match.params;\r\n    const { hero } = this.props.location.state;\r\n    this.img.src = `https://storage.cloud.google.com/dota-hero-portraits/256x144/${this.fullPortraitPath}`; // force preload of image\r\n    this.setState(() => ({ hero }));\r\n\r\n    fetch(`${process.env.BASE_URL || 'http://localhost:5000'}/media?destination=${hero.responses_url}`, {\r\n      method: 'GET',\r\n     }).then((response) => {\r\n       return response.json();\r\n     }).then((data) => {\r\n      console.log(data);\r\n      let usableMp3s = data.mp3s.filter((mp3) => {\r\n        return mp3.text.trim() !== \"\"; // some mp3s will have \" \" as text content, just don't use these.\r\n      });\r\n      this.setState(() => {\r\n        return { mp3s: usableMp3s };\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.mp3s ? (\r\n        <div className=\"sound-board\">\r\n          <div className=\"sound-board__header\">\r\n            <img className=\"hero-portrait__image\" src={`https://storage.cloud.google.com/dota-hero-portraits/256x144/${this.fullPortraitPath}`} alt=\"\"></img>\r\n          </div>\r\n          <div className=\"sound-board__content\">\r\n            {this.state.mp3s.map((resource, index) => {\r\n              return <SoundButton mp3src={resource.mp3src} text={resource.text} key={resource.mp3src+index}/>\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : <ReactLoading className=\"loading\" type=\"bars\" color=\"grey\" height='4%' width='4%'/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Soundboard;","import React from 'react';\r\n\r\nimport './Contact.css';\r\n\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: null,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"contact-form\" method=\"POST\" action={`${process.env.BASE_URL || 'http://localhost:5000'}/contact`}>\r\n        <fieldset>\r\n          <legend>Contact me about shit</legend>\r\n          <label htmlFor=\"name\">Name: </label>\r\n          <input id=\"name\" type=\"text\" name=\"name\"></input>\r\n\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input id=\"email\" type=\"text\" name=\"email\"></input>\r\n          \r\n          <label htmlFor=\"body\">Comments: </label>\r\n          <textarea id=\"body\" cols=\"50\" rows=\"10\" name=\"body\"></textarea>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </fieldset>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport SoundBoard from './components/SoundBoard';\r\nimport Contact from './components/Contact';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const App = () => (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path='/' component={Home}/>\r\n          <Route path='/contact' component={Contact}/>\r\n          <Route path='/:heroname' component={SoundBoard}/>\r\n        </Switch>\r\n      </div>\r\n    )\r\n    return (\r\n      <Switch>\r\n        <App/>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}